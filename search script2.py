# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CT7xNLegn1bSoCLQLywf0RzBDDQqbGZQ
"""

import scipy
import pandas as pd
import numpy as np
import seaborn as sns

data = pd.read_excel('data_school_math.xlsx')

data

data.describe()

sns.histplot(data.school_1, color = 'blue')
sns.histplot(data.school_2, color = 'yellow')
sns.histplot(data.school_3, color = 'green')

"""**Попарный расчет F-критерия**"""

mean_1 = np.mean(data.school_1)
mean_2 = np.mean(data.school_2)
mean_3 = np.mean(data.school_3)
me12 = np.mean((mean_1, mean_2))
me13 = np.mean((mean_1, mean_3))
me23 = np.mean((mean_3, mean_2))

data.head()

SS_wg_1=np.sum((data.school_1-mean_1)**2)
SS_wg_2=np.sum((data.school_2-mean_2)**2)
SS_wg_3=np.sum((data.school_3-mean_3)**2)

SS_wg12 =SS_wg_1+SS_wg_2
SS_wg13 =SS_wg_1+SS_wg_3
SS_wg23 =SS_wg_2+SS_wg_3

m1 = data['school_1'].count()
m2 = data['school_2'].count()
m3 = data['school_3'].count()
m=len(data.axes[0])
n=len(data.axes[1])-1

MS_wg12=SS_wg12/(n*m-n)
MS_wg13=SS_wg13/(n*m-n)
MS_wg32=SS_wg23/(n*m-n)

print(m, n, MS_wg12, MS_wg13, MS_wg32, m1, m2, m3)

SS_bg12 = (m1*(mean_1-me12)**2+m2*(mean_2-me12)**2)
SS_bg13 = (m1*(mean_1-me13)**2+m3*(mean_3-me13)**2)
SS_bg23 = (m2*(mean_2 - me23)**2+m3*(mean_3-me23)**2)

print(SS_bg12, SS_bg13, SS_bg23)

MS_bg12=SS_bg12/(n-1)
MS_bg13=SS_bg13/(n-1)
MS_bg23=SS_bg23/(n-1)

print(MS_bg12, MS_bg13, MS_bg23)

F12=MS_bg12/MS_wg12
F13=MS_bg13/MS_wg13
F23=MS_bg23/MS_wg32


print(F12, F13, F23)

p12=scipy.stats.f.sf(F12, dfn=n-1, dfd=(m1+m2)-n)
p13=scipy.stats.f.sf(F13, dfn=n-1, dfd=(m1+m3)-n)
p23=scipy.stats.f.sf(F23, dfn=n-1, dfd=(m2+m3)-n)

print (f'statistics={F12:.5}, p-value={p12:.5}''\n' )
print (f'statistics={F13:.5}, p-value={p13:.5}','\n' )
print (f'statistics={F23:.5}, p-value={p23:.5}','\n' )

#- Степени свободы внутри групп df = N - k где \( N \) — общее количество наблюдений во всех группах (сумма размеров выборок).

#если pvalue > критического (0.05, 0.1, 0.01) не отвергаем нулевую гипотезу
# если pvalue < критического, то отвергаем

#Для школ 1 и 2: pvalue > p => не отвергаем нулевую гипотезу, дисперсии выборок одинаковы
#Для школ 1 и 3: pvalue < p => отвергаем нулевую гипотезу, дисперсии выборок не одинаковы
#Для школ 2 и 3: pvalue < p => отвергаем нулевую гипотезу, дисперсии выборок не одинаковы
#В большинстве случаев дисперсии выборок разняться, но прежде чем делать вывод, что результаты ЕГЭ все же зависят от конкретной школы, проведем дисперсионный анализ

"""**Дисперсионный анализ для 3 выборок сразу**"""

import pandas
setattr(pandas, "Int64Index", pandas.Index)
setattr(pandas, "Float64Index", pandas.Index)

from scipy.stats import f_oneway
data['school_2'].fillna(data['school_2'].mean(), inplace=True) #Поскольку размеры выборок разнятся, для проведения ДА доведем их до одинаковых размеров и заполним недостающие поля ср. значением
data['school_3'].fillna(data['school_3'].mean(), inplace=True)
f_oneway(data.school_1, data.school_2, data.school_3)

"""
Пусть H0: Все групповые значения равны, результаты ЕГЭ не зависят от школы
H1 = Результаты ЕГЭ для каждой школы разные

Критическим уровнем значимости возьмем а=0.01

Интерпретация результатов:
1)F-статистика:
Значение 14.90 указывает на значительную разницу между группами.

2)
По результатам дисперсионного анализа pvalue < a
Таким образом, мы должны опровергнуть нулевую гипотезу
Значит, конкретная школа сильно влияет на результаты ЕГЭ, для каждой школы показатели будут разными

"""